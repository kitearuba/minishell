# **************************************************************************** #
#                              Project Information                             #
# **************************************************************************** #
NAME            = minishell

# **************************************************************************** #
#                            Compiler and Flags                                #
# **************************************************************************** #
CC              = cc
CFLAGS          = -Wall -Wextra -Werror -MMD -MP
MAKE            = make

# **************************************************************************** #
#                              Directories                                     #
# **************************************************************************** #
SRC_DIR         = src
LIBFT_DIR       = libft
INC_DIR         = include
LIBFT_INC_DIR   = $(LIBFT_DIR)/include

# **************************************************************************** #
#                          File Paths and Deps                                 #
# **************************************************************************** #
MAKEFILE        = Makefile
HEADER          = $(INC_DIR)/minishell.h $(INC_DIR)/builtin.h $(INC_DIR)/struct.h
LIBFT_A         = $(LIBFT_DIR)/libft.a
LIBFT_H         = $(LIBFT_INC_DIR)/libft.h
LIBFT_MAKEFILE  = $(LIBFT_DIR)/$(MAKEFILE)
DEPS            = $(HEADER) $(MAKEFILE)

# **************************************************************************** #
#                          Source Files and Objects                            #
# **************************************************************************** #
SRC = 	minishell.c \
		$(SRC_DIR)/core/init_minishell.c \
		$(SRC_DIR)/core/execute_minishell.c \
		$(SRC_DIR)/lexer/tokenize.c \
		$(SRC_DIR)/lexer/tokenizer_utils.c \
		$(SRC_DIR)/lexer/tokenizer_redirects.c \
		$(SRC_DIR)/parser/parse_tokens.c \
		$(SRC_DIR)/parser/handle_parse_redirection.c \
		$(SRC_DIR)/parser/parse_utils.c \
		$(SRC_DIR)/parser/parser_cmd.c \
		$(SRC_DIR)/parser/parser_cmd_utils.c \
		$(SRC_DIR)/parser/parser_checks.c \
		$(SRC_DIR)/parser/last_token_is_pipe.c \
		$(SRC_DIR)/expand/expand.c \
		$(SRC_DIR)/expand/expand_utils.c \
		$(SRC_DIR)/expand/expand_wildcard.c \
		$(SRC_DIR)/expand/wildcard_utils.c \
		$(SRC_DIR)/expand/wildcard_utils_2.c \
		$(SRC_DIR)/env/ft_getenv.c \
		$(SRC_DIR)/env/env_set.c \
		$(SRC_DIR)/utils/free_2d_array.c \
		$(SRC_DIR)/utils/free_tokens.c \
		$(SRC_DIR)/utils/free_commands.c \
		$(SRC_DIR)/utils/free_all_and_exit.c \
		$(SRC_DIR)/utils/input_utils.c \
		$(SRC_DIR)/cmd/built_in.c \
		$(SRC_DIR)/cmd/execute_commands.c \
		$(SRC_DIR)/execution/get_cmd_path.c \
		$(SRC_DIR)/execution/execve.c \
		$(SRC_DIR)/execution/run_external_cmd.c \
		$(SRC_DIR)/execution/run_external_cmd_utils.c \
		$(SRC_DIR)/execution/redirection.c \
		$(SRC_DIR)/execution/heredoc.c \
		$(SRC_DIR)/execution/heredoc_utils.c \
		$(SRC_DIR)/execution/pipes/execute_pipeline.c \
		$(SRC_DIR)/execution/pipes/create_pipe.c \
        $(SRC_DIR)/builtin/ft_echo.c \
        $(SRC_DIR)/builtin/ft_cd.c \
        $(SRC_DIR)/builtin/ft_pwd.c \
        $(SRC_DIR)/builtin/ft_export.c \
        $(SRC_DIR)/builtin/ft_export_utils.c \
        $(SRC_DIR)/builtin/ft_unset.c \
        $(SRC_DIR)/builtin/ft_env.c \
        $(SRC_DIR)/builtin/ft_exit.c \
        $(SRC_DIR)/builtin/builtin_utils.c \
        $(SRC_DIR)/signal/signal.c

OBJ             = $(SRC:.c=.o)
DEP             = $(OBJ:.o=.d)

LIBFT_SRC := $(LIBFT_DIR)/$(SRC_DIR)/ft_isalpha.c $(LIBFT_DIR)/$(SRC_DIR)/ft_isdigit.c \
             $(LIBFT_DIR)/$(SRC_DIR)/ft_isalnum.c $(LIBFT_DIR)/$(SRC_DIR)/ft_isascii.c \
             $(LIBFT_DIR)/$(SRC_DIR)/ft_isprint.c $(LIBFT_DIR)/$(SRC_DIR)/ft_strlen.c \
             $(LIBFT_DIR)/$(SRC_DIR)/ft_memset.c $(LIBFT_DIR)/$(SRC_DIR)/ft_bzero.c \
             $(LIBFT_DIR)/$(SRC_DIR)/ft_memcpy.c $(LIBFT_DIR)/$(SRC_DIR)/ft_memmove.c \
             $(LIBFT_DIR)/$(SRC_DIR)/ft_strlcpy.c $(LIBFT_DIR)/$(SRC_DIR)/ft_strlcat.c \
             $(LIBFT_DIR)/$(SRC_DIR)/ft_toupper.c $(LIBFT_DIR)/$(SRC_DIR)/ft_tolower.c \
             $(LIBFT_DIR)/$(SRC_DIR)/ft_strchr.c $(LIBFT_DIR)/$(SRC_DIR)/ft_strrchr.c \
             $(LIBFT_DIR)/$(SRC_DIR)/ft_strncmp.c $(LIBFT_DIR)/$(SRC_DIR)/ft_memchr.c \
             $(LIBFT_DIR)/$(SRC_DIR)/ft_memcmp.c $(LIBFT_DIR)/$(SRC_DIR)/ft_strnstr.c \
             $(LIBFT_DIR)/$(SRC_DIR)/ft_atoi.c $(LIBFT_DIR)/$(SRC_DIR)/ft_atoi_base.c \
             $(LIBFT_DIR)/$(SRC_DIR)/ft_atoll.c $(LIBFT_DIR)/$(SRC_DIR)/ft_calloc.c \
             $(LIBFT_DIR)/$(SRC_DIR)/ft_strdup.c $(LIBFT_DIR)/$(SRC_DIR)/ft_substr.c \
             $(LIBFT_DIR)/$(SRC_DIR)/ft_strjoin.c $(LIBFT_DIR)/$(SRC_DIR)/ft_strtrim.c \
             $(LIBFT_DIR)/$(SRC_DIR)/ft_split.c $(LIBFT_DIR)/$(SRC_DIR)/ft_itoa.c \
             $(LIBFT_DIR)/$(SRC_DIR)/ft_strmapi.c $(LIBFT_DIR)/$(SRC_DIR)/ft_striteri.c \
             $(LIBFT_DIR)/$(SRC_DIR)/ft_putchar_fd.c $(LIBFT_DIR)/$(SRC_DIR)/ft_putstr_fd.c \
             $(LIBFT_DIR)/$(SRC_DIR)/ft_putendl_fd.c $(LIBFT_DIR)/$(SRC_DIR)/ft_putnbr_fd.c \
             $(LIBFT_DIR)/$(SRC_DIR)/ft_strcmp.c $(LIBFT_DIR)/$(SRC_DIR)/ft_strtol.c \
             $(LIBFT_DIR)/$(SRC_DIR)/ft_lstnew_bonus.c $(LIBFT_DIR)/$(SRC_DIR)/ft_lstadd_front_bonus.c \
             $(LIBFT_DIR)/$(SRC_DIR)/ft_lstsize_bonus.c $(LIBFT_DIR)/$(SRC_DIR)/ft_lstlast_bonus.c \
             $(LIBFT_DIR)/$(SRC_DIR)/ft_lstadd_back_bonus.c $(LIBFT_DIR)/$(SRC_DIR)/ft_lstdelone_bonus.c \
             $(LIBFT_DIR)/$(SRC_DIR)/ft_lstclear_bonus.c $(LIBFT_DIR)/$(SRC_DIR)/ft_lstiter_bonus.c \
             $(LIBFT_DIR)/$(SRC_DIR)/ft_lstmap_bonus.c $(LIBFT_DIR)/$(SRC_DIR)/ft_printf.c \
             $(LIBFT_DIR)/$(SRC_DIR)/ft_printf_fd.c $(LIBFT_DIR)/$(SRC_DIR)/print_format.c \
             $(LIBFT_DIR)/$(SRC_DIR)/ft_putunbr.c $(LIBFT_DIR)/$(SRC_DIR)/ft_puthex.c \
             $(LIBFT_DIR)/$(SRC_DIR)/handle_char.c $(LIBFT_DIR)/$(SRC_DIR)/handle_string.c \
             $(LIBFT_DIR)/$(SRC_DIR)/handle_pointer.c $(LIBFT_DIR)/$(SRC_DIR)/handle_int.c \
             $(LIBFT_DIR)/$(SRC_DIR)/handle_uint.c $(LIBFT_DIR)/$(SRC_DIR)/handle_hex.c \
             $(LIBFT_DIR)/$(SRC_DIR)/handle_percent.c $(LIBFT_DIR)/$(SRC_DIR)/utils.c \
             $(LIBFT_DIR)/$(SRC_DIR)/get_next_line.c $(LIBFT_DIR)/$(SRC_DIR)/get_next_line_bonus.c \
             $(LIBFT_DIR)/$(SRC_DIR)/ft_strappend.c

LIBFT_OBJ = $(LIBFT_SRC:.c=.o)

# **************************************************************************** #
#                                Headers                                       #
# **************************************************************************** #
INCLUDES        = -I$(INC_DIR) -I$(LIBFT_INC_DIR)

# **************************************************************************** #
#                                Rules                                         #
# **************************************************************************** #
all: $(NAME)

$(NAME): $(OBJ) $(LIBFT_A)
	$(CC) $(CFLAGS) $(OBJ) $(LIBFT_A) $(INCLUDES) -lreadline -o $(NAME)

# Generic rule (handles files in root and subdirs)
%.o: %.c $(DEPS)
	$(CC) $(CFLAGS) $(INCLUDES) -c $< -o $@

# Build libft
$(LIBFT_A): $(LIBFT_MAKEFILE) $(LIBFT_H) $(LIBFT_SRC)
	$(MAKE) -C $(LIBFT_DIR)

clean:
	$(RM) $(OBJ) $(DEP)
	$(MAKE) -C $(LIBFT_DIR) clean

fclean: clean
	$(RM) $(NAME)
	$(RM) $(LIBFT_A)

re: fclean all

-include $(DEP)

.PHONY: all clean fclean re
